name: CI/CD with GHCR and Aliyun ECS

env:
  IMAGE_NAME: hello-cicd
  CONTAINER_PORT: 3000
  HOST_PORT: 80

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE=ghcr.io/$OWNER/${{ env.IMAGE_NAME }}:latest
          docker build -t $IMAGE .
          docker push $IMAGE

  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Compute repository name
        run: echo "OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      - name: SSH to ECS and deploy container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USER }}
          key: ${{ secrets.ALIYUN_SSH_KEY }}
          script: |
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
            if docker ps -a --format "{{.Names}}" | grep -q "^${{ env.IMAGE_NAME }}$"; then
              docker stop ${{ env.IMAGE_NAME }} || true
              docker rm ${{ env.IMAGE_NAME }} || true
            fi
            docker run -d --name ${{ env.IMAGE_NAME }} -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest